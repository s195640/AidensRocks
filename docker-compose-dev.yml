services:
  postgres:
    container_name: database
    ports:
      - '5431:5432'
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'OmegaA..1154'
      POSTGRES_DB: 'aidensrocks'
    volumes:
      - truenas-sql:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres -d aidensrocks'"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - app-network
  server:
    container_name: server
    build:
      context: ./server
      dockerfile: docker/Dockerfile.dev
    volumes:
      - ./server:/app
      - /app/node_modules
      - truenas-media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: docker/Dockerfile.dev
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - app-network
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginxTEST.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - server
    networks:
      - app-network
  pg_backup:
    container_name: pg_backup
    image: alpine:latest
    command: sh -c "
      apk update &&
      apk add --no-cache postgresql-client && \
      echo '*/5 * * * * PGPASSWORD=OmegaA..1154 pg_dump -h 192.168.1.50 -p 5431 -U postgres aidensrocks > /backup/aidensrocks_backup_$(date +\%F_\%H-\%M).sql' > /etc/crontabs/root && \
      crond -f -l 2
      "
    volumes:
      - truenas-sql-backup:/backup
    networks:
      - app-network
volumes:
  truenas-media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/test/media
  truenas-sql:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/test/sql
  truenas-sql-backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/test/sql_backup
networks:
  app-network:
    driver: bridge
