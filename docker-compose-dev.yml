services:
  # postgres:
  #   container_name: database
  #   ports:
  #     - '5431:5432'
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: '${POSTGRES_USER}'
  #     POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   volumes:
  #     - ./docker_test_db:/var/lib/postgresql/data
  #     #- truenas-sql:/var/lib/postgresql/data # Mount TrueNAS sql folder
  #   healthcheck:
  #     test:
  #       [
  #         'CMD-SHELL',
  #         "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
  #       ]
  #     interval: 5s
  #     timeout: 60s
  #     retries: 5
  #     start_period: 80s
  #   networks:
  #     - app-network
  server:
    build:
      context: ./server
      dockerfile: docker/Dockerfile.dev
    ports:
      - '7999:8000'
    #command: bash -c "npx prisma migrate reset --force && npm run dev"
    command: bash -c "npm run dev"
    volumes:
      - ./server:/app
      - /app/node_modules
      - truenas-media:/app/media
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    networks:
      - app-network
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: docker/Dockerfile.dev
    command: bash -c "npm run dev -- --host"
    ports:
      - '5172:5173'
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - app-network
volumes:
  truenas-media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/test/media
networks:
  app-network:
    driver: bridge
