services:
  postgres:
    container_name: database
    restart: always
    build:
      context: ../../
      dockerfile: ./data/docker/docker-db-prod
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: OmegaA..1154
      POSTGRES_DB: aidensrocks
    ports:
      - '5431:5432'
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./data/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf" ]
    healthcheck:
      test: [ 'CMD-SHELL', "sh -c 'pg_isready -U postgres -d aidensrocks'" ]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - app-network

  server:
    container_name: server
    build:
      context: ../../
      dockerfile: ./data/docker/docker-server-prod
    command: bash -c "npm start"
    volumes:
      - truenas-media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  client:
    container_name: client
    build:
      context: ../../
      dockerfile: ./data/docker/docker-client-prod
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - truenas-certs:/etc/ssl/certs:ro
      - truenas-private:/etc/ssl/private:ro
    depends_on:
      - server
    networks:
      - app-network

volumes:
  truenas-media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/media

  truenas-certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/ssl/certs

  truenas-private:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/ssl/private

networks:
  app-network:
    driver: bridge
