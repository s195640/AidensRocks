services:
  postgres:
    container_name: database
    ports:
      - '5431:5432'
    image: postgres
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    volumes:
      - truenas-sql:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres -d aidensrocks'"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - app-network

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: docker/Dockerfile.prod
    command: bash -c "npm start"
    volumes:
      - truenas-media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  web:
    container_name: web
    build:
      context: ./client
      dockerfile: docker/Dockerfile.prod
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - truenas-certs:/etc/ssl/certs:ro
      - truenas-private:/etc/ssl/private:ro
    depends_on:
      - server
    networks:
      - app-network

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:1
    container_name: cloudflare-ddns
    restart: always
    network_mode: host
    environment:
      - CLOUDFLARE_API_TOKEN=_92Y5n8vMScmf6EArIG7sbiAZfVfpFcSGOpaI24u
      - DOMAINS=aidensrocks.com,www.aidensrocks.com
      - PROXIED=false
      - UPDATE_INTERVAL=30
      - QUIET=1
      - IP6_PROVIDER=none
  pg_backup:
    container_name: pg_backup
    image: alpine:latest
    command: sh -c "
      apk update &&
      apk add --no-cache postgresql-client && \
      echo '0 * * * * PGPASSWORD=OmegaA..1154 pg_dump -h 192.168.1.40 -p 5431 -U postgres aidensrocks > /backup/aidensrocks_backup_$(date +\%F_\%H-\%M).sql' > /etc/crontabs/root && \
      crond -f -l 2
      "
    volumes:
      - truenas-sql-backup:/backup
    networks:
      - app-network

volumes:
  truenas-media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/media

  truenas-sql:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/sql

  truenas-certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/ssl/certs

  truenas-private:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/ssl/private

  truenas-sql-backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/aidensrocks/prod/sql_backup
      
networks:
  app-network:
    driver: bridge
